plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
}

group = 'com.sonic'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	//lombok
	compileOnly 'org.projectlombok:lombok'
	//mysql
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'


	// spring 3.0 이상인 경우 security와 호환이슈
	//implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
	//swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'

	//Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	//web token
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//mail sender
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	//S3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	//validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	//Querydsl
	//implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	//annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	//annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	//annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}
test.onlyIf {
	!project.hasProperty('test')
}
